@page "/anime/detail/{AnimeId:int}"

@inject IAnimeServices _animeServices

<h3>Anime Details</h3>

@if (animeDetail is null)
{
    <p class="text-warning">Sorry, there isn't any availble info.</p>
}
else
{
    <div class="container">
        <div class="card">
            <div class="card-header d-flex justify-content-between">
                <span>Anime #@animeDetail.Id</span>
            </div>
            <div class="card-body">
                <h4 class="card-title">@animeDetail.Name</h4>
                <p class="text-muted">@animeDetail.Description</p>
                <img src="@animeDetail.Poster" width="300" height="300">
                <p class="text-muted">Number of Seasons: @animeDetail.NumOfSeasons</p>
                <p class="text-muted">Number of Episodes: @animeDetail.NumOfEpisodes</p>
            </div>
            <div class="card-footer text-muted d-flex justify-content-between">
                <span class="text-left">Release Date: @animeDetail.ReleaseDate</span>
            </div>
        </div>

        <div class="d-flex justify-content-center mt-3">
            <div class="text-center justify-content-between w-25"></div>
            <a href="/anime/edit/@animeDetail.Id" class="btn btn-outline-primary">Edit</a>
            <a href="/anime/delete/@animeDetail.Id" class="btn btn-outline-danger">Delete</a>
            <a href="/anime" class="btn btn-outline-secondary">Back to List</a>
        </div>
    </div>
}

@code {
    [Parameter]
    public int AnimeId { get; set; }    

    public AnimeDetail? animeDetail { get; set; }

    protected override async Task OnInitializedAsync()
    {
        animeDetail = await _animeServices.GetAnime(AnimeId);
    }
}
