@page "/EpisodeTracker/Detail/{EpisodeTrackerId:int}"

@inject IEpisodeTrackerServices _episodeServices
@inject IAnimeServices _animeServices

<h3>Episode Tracker Detail</h3>
<hr/>

@if(episodeTrackerDetail is null)
{
    <p class="text-warning">Sorry, there isn't any available info</p>
}
else
{
    <div class="container">
        <div class="card">
            <span>Episode Tracker #@episodeTrackerDetail.Id</span>
            
        </div>
        <div class="card-body">
            <div class="card-body">
                <p class="text-muted">Number of Episodes: @episodeTrackerDetail.TotalEpisodes</p>
                <p class="text-muted">Number of Episodes: @episodeTrackerDetail.CurrentEpisode</p>
            </div>
        </div>

        <div class="d-flex justify-content-center mt-3">
            <div class="text-center justify-content-between w-25"></div>
            <a href="/EpisodeTracker/edit/@episodeTrackerDetail.Id" class="btn btn-outline-warning">Edit</a>
            <a href="/EpisodeTracker/delete/@episodeTrackerDetail.Id" class="btn btn-outline-danger">Delete</a>
            <a href="/EpisodeTracker" class="btn btn-outline-secondary">Back to List</a>
        </div>
    </div>
}

@code {
    [Parameter]
    public int episodeTrackerId { get; set; }

    public EpisodeTrackerDetail? episodeTrackerDetail { get; set; }

    protected override async Task OnInitializedAsync()
    {
        episodeTrackerDetail = await _episodeServices.GetEpisodeTracker(episodeTrackerId);
    }
}
